su_speaker
su_year = SpeechInfoExtract(speechInfo, 4, c)
su_year
su_speaker
su_date
su_month = strsplit(su_date, ' ')
su_month
su_month
su_date
strsplit(su_date, ' ')
su_month = SpeechInfoExtract(strsplit(su_date, ' '), 2, c)
su_month
su_month = SpeechInfoExtract(strsplit(su_date, ' '), 2, unique)
su_month
su_data
paste(su_data, sep = "")
su_data
paste(su_data, sep = "")
su_data
paste(su_data, sep = "")
paste(su_data, sep = "")[1000]
class(su_data)
paste(c("yolo ", "hi bitch fuck you", "eat crapp  asdpofijqwpeioj012r39j aiejf qp3 jasdasf"), sep = ' ')
paste(c("yolo ", "hi bitch fuck you", "eat crapp  asdpofijqwpeioj012r39j aiejf qp3 jasdasf"), sep = '')
paste(c("yolo ", "hi bitch fuck you", "eat crapp  asdpofijqwpeioj012r39j aiejf qp3 jasdasf"), sep = ' ')
start = su_data[1]
start
for(lines in 2:length(su_data)){
start = paste(start, su_data[lines()])
}
for(lines in 2:length(su_data)){
start = paste(start, su_data[lines])
}
for(lines in 2:length(su_data)){
start = paste(start, su_data[lines], sep = " ")
}
paste(su_data, collapse = '')
try = paste(su_data, collapse = '')
try[1]
try[]
try[2]
try[3]
class(try)
strsplit(try, "***")
strsplit(try, "***")
try_str = as.character(try)
class(try_str)
strsplit(try_str, "***")
strsplit(
"fuck you", " "
)
strsplit(try_str, " ")
strsplit(try_str, "*")
strsplit(try_str, "***")
strsplit(try_str, "***", fixed = T)
splits = strsplit(try_str, "*")
splits = strsplit(try_str, "***", fixed = T)
splits[1]
splits[1]
splits[[1]][1]
splits[[1]][2]
splits[[2]][2]
splits[[2]][1]
length(splits)
length(splits[[1]])
length(splits[[1]][224])
splits[[1]][224]
splits[[1]][223]
su_speeches = c()
get_speech = function(lst){
for(i in 2:223){
su_speeches[i] = lst[[1]][i]
}
}
get_speech(splits)
su_speeches
su_speeches = c()
get_speech(splits)
su_speeches
splits[[1]]
splits[[1]][1]
splits[[1]][2]
get_speech = function(lst){
for(i in 2:223){
su_speeches[i] = lst[[1]][i]
}
}
get_speech = function(lst){
su_speeches = c()
for(i in 2:223){
su_speeches[i] = lst[[1]][i]
}
}
get_speech(splits)
su_speeches
for(i in 2:223){
su_speeches[i] = lst[[1]][i]
}
for(i in 2:223){
su_speeches[i] = splits[[1]][i]
}
su_speeches
su_speeches[1]
su_speeches[2]
su_speeches[3]
splits[[1]][1]
splits[[1]][2]
for(i in 2:223){
su_speeches[i-1] = splits[[1]][i]
}
su_speeches
su_speeches = c()
try = paste(su_data, collapse = '')
try_str = as.character(try)
splits = strsplit(try_str, "***", fixed = T)
for(i in 2:223){
su_speeches[i-1] = splits[[1]][i]
}
try = paste(su_data, collapse = '')
su_speeches[1]
su_speeches[2]
su_speeches[3]
length(su_speeches)
speeches
length(speeches)
len(su_speeches)
length(su_speeches)
grep(regSpeech, su_data)
su_data[232]
su_data[233]
su_data[234]
su_data[232]
su_data[11]
su_speeches[222]
length(su_speeches)
su_speeches[1]
su_speeches[222]
su_speeches[223]
su_speeches[222]
speechInfo
splits == ""
gsub("[:digits:]", "", su_speeches)
gsub("[:digit:]", "", su_speeches)
gsub("[:digit:]|'|[*[Aa]pplause]*", "", su_speeches)
tolower(c("Fuck", "WHTPOI", "WEIFJPF"))
tolower(gsub("[:digit:]|'|[*[Aa]pplause]*", "", su_speeches))
strsplit(su_speeches, "[:punct:]")
?strsplit
no_punct = strsplit(su_speeches, "[:punct:]")
no_punct[no_punct!=""]
no_punct
no_punct[no_punct != ""]
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
no_punct[no_punct != ""]
no_punct[no_punct != '']
no_punct[-'']
no_punct == ''
no_punct
length(punct)
length(no_punct)
lapply(no_punct, function(lst) lst[lst != ''])
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
no_punct
su_tokens = apply(no_punct, function(lst) lst[lst != ''])
su_tokens = apply(no_punct, function(lst) lst[lst != ''])
lapply(no_punct, function(lst) lst[lst != ''])
lapply(no_punct, function(lst) lst[lst != ''])
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
lapply(no_punct, function(lst) lst[lst != ''])
no_punct
lapply(no_punct, function(lst) lst[lst != '' | lst != ' '])
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
lapply(no_punct, function(lst) lst[lst != '' | lst != ' '])
1.96 * 0.01408022
0.48 + 1.96 * 0.01408022
0.48 - 1.96 * 0.01408022
0.48 - 1.65* 0.02746049
1.65* 0.02746049
0.48 * 0.52 / (0.15/1.65)^2
0.48 * 0.52 / (0.015/1.65)^2(
)
0.48 * 0.52 / (0.015/1.65)^2
0.48*0.52/(0.02/1.95)^2
0.48*0.52/(0.02/1.96)^2
0.37 * 1019
0.12 * 1019
(50739-48132) / 50739
0.0513806 * 6617
(373 - 339.9854)^2 / 339.9854
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
su_tokens = lapply(no_punct, function(lst) lst[lst != '' | lst != ' '])
su_tokens
no_punct
len(no_punct)
length(no_punct)
length(su_tokens)
sapply(no_punct, function(lst) lst[lst != '' | lst != ' '])
su_tokens = sapply(no_punct, function(lst) lst[lst != ''])
su_tokens
su_tokens = sapply(no_punct, function(lst) lst[lst != ' '])
su_tokens
su_tokens = sapply(no_punct, function(lst) lst[lst != ' ' | lst!=""])
su_tokens
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]")
su_tokens = sapply(no_punct, function(lst) lst[lst != ''])
su_tokens = sapply(no_punct, function(lst) lst[lst != ' ' | lst!=""])
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]+")
no_punct
su_tokens = sapply(no_punct, function(lst) lst[lst != ""])
su_tokens
no_punct = strsplit(su_speeches, "[:punct:]|[:space:]+")
su_tokens = sapply(no_punct, function(lst) lst[lst != ""])
su_tokens
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]*")
no_punct
no_punct = strsplit(su_speeches, "[:punct:]|[:blank:]+")
no_punct
su_tokens = sapply(no_punct, function(lst) lst[lst != ""])
0.56 + 1.65 *  sqrt(0.56*(1-0.56)/1507
)
0.56 + 1.65 *  sqrt(0.56*(1-0.56)/1507)
0.56 - 1.65 *  sqrt(0.56*(1-0.56)/1507)
(0.48 - 0.5) / 0.02748249
pnorm(-0.7277361)
sqrt((264/318) * (1 - (264/318))) / 318 + sqrt((299/369) * (1 - (299/369))) / 369
(0.01989058 - 0) / 0.002243221
pnorm(8.866973)
confidence_interval = c(X_bar - 1.96 * SE, X_bar + 1.96 * SE)
confidence_interval
hist(X_bar_estimate, main = "Mean Sampling Distribution for X_bar", xlab = "Mean Point Estimates")
for(i in 1:5){
sz = sample(50:250 , 1, replace = T)
B = sample(900: 1500, 1 , replace = T)
if(i == 1){
CIs = matrix(MC_sample(sz,B), ncol = 2)
}else{
CIs = rbind(CIs, MC_sample(sz,B))
}
}
plot(CIs)
for(i in 1:10){
sz = sample(50:250 , 1, replace = T)
B = sample(900: 1500, 1 , replace = T)
if(i == 1){
CIs = matrix(MC_sample(sz,B), ncol = 2)
}else{
CIs = rbind(CIs, MC_sample(sz,B))
}
}
plot(CIs)
CIWidth = MC_sample(100, 10000)[1] - MC_sample(100, 10000)[2]
plot(CIWidth)
CIWidth = c(MC_sample(100, 10000)[1] - MC_sample(100, 10000)[2], 10000)
plot(CIWidth)
CIWidth
CIWidth = c(10000, MC_sample(100, 10000)[1] - MC_sample(100, 10000)[2])
plot(CIWidth)
CIWidth
CIWidth = list()
list[[1]] = c(10000, MC_sample(100, 10000)[1] - MC_sample(100, 10000)[2])
CIWidth
CIWidth = c()
counter = 1
for(size in seq(100, 1000, by = 100)){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
CIWidth
CIWidth = c()
counter = 1
size_number = seq(100, 1000, by = 100)
for(size in seq(100, 1000, by = 100)){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_number, CIWidth)
confidence_interval
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size_B)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
CIWidth = c()
counter = 1
sample_size = seq(100, 1000, by = 100)
for(size in sample_size){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(sample_size, CIWidth)
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
# Ans:
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
CIWidth = c()
counter = 1
sample_size = seq(100, 1000, by = 100)
for(size in sample_size){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(sample_size, CIWidth)
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
CIWidth = c()
counter = 1
sample_size = seq(100, 1000, by = 100)
for(size in sample_size){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(sample_size, CIWidth)
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
paste(su_data, collapse = '')
try_str
su_speeches = c()
try = paste(su_data, collapse = '')
try_str = as.character(try)
try_str
class(try_str)
class(try)
try_str = paste(su_data, collapse = '')
splits = strsplit(try_str, "***", fixed = T)
for(i in 2:223){
su_speeches[i-1] = splits[[1]][i]
}
splits = strsplit(try_str, "***", fixed = TRUE)
for(i in 2:223){
su_speeches[i-1] = splits[[1]][i]
}
length(su_speeches)
regSpeech = "[A-Z][a-z\ ]+,\ [A-Z][A-Za-z\ ]+,\ [A-Z][A-Za-z\ 0-9]+,\ [0-9]+"
length(grep(regSpeech, su_data))
speeches[221]
speeches[1]
su_speeches[1]
su_speeches[222]
regSpeech = "[A-Z][a-z\ ]+,\ [A-Z][A-Za-z\ ]+,\ [A-Z][A-Za-z\ 0-9]+,\ [0-9]+"
length(grep(regSpeech, su_data))
speeches
l = list()
l["hi"] = c(1,2,3)
l$hi = c(1,2,3)
l
l$'lol' = c(1,2,3)
l
count()
unclass(table(su_tokens))
sapply(su_tokens, table)
lst = sapply(su_tokens, unclass(table))
lst
speeches
splits = strsplit(try_str, "***", fixed = T)
splits
dim(splits)
length(splits)
su_tokens
sqrt(0.56*(1-0.56)/1507)
sqrt(0.56*(1-0.56)/1507) * 1.65
0.56 + 1.65 *  sqrt(0.56*(1-0.56)/1507)
sqrt((264/318) * (1 - (264/318)) / 318 + (299/369) * (1 - (299/369)) / 369)
(0.01989058 - 0) / 0.0293239
pnorm(0.6783061)
pnorm(0.6783061)
(1-pnorm(0.6783061))* 2
L
X_bar_estimate
hist(X_bar_estimate, main = "Mean Sampling Distribution for X_bar", xlab = "Mean Point Estimates")
pres
speeches
speechInfo
su_date
su_speaker
su_year
su_month
su_year = SpeechInfoExtract(speechInfo, 4, unique)
su_year
su_speaker = SpeechInfoExtract(speechInfo, 1, unique)
su_speaker
su_date = SpeechInfoExtract(speechInfo, 3, unique)
su_date
try_str
tolower(gsub("[:digit:]|'|[*[Aa]pplause]*", "", su_speeches))
CIWidth = c()
counter = 1
sample_size = seq(100, 1000, by = 100)
for(size in sample_size){
ci = MC_sample(size, 1000)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(sample_size, CIWidth)
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
# Change of Simulation Size B
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
# Ans: With a larger sample size we can see th
# Change of Simulation Size B
CIWidth = c()
counter = 1
size_B = seq(1000, 10000, by = 1000)
for(size in size_B){
ci = MC_sample(100, size)
CIWidth[counter] = ci[2] - ci[1]
counter = counter + 1
}
plot(size_B, CIWidth)
tolower(gsub("[:digit:]|'|(\[*[Aa]pplause\]*)", "", su_speeches))
tolower(gsub("[:digit:]|'|([Aa]pplause)", "", su_speeches))
tolower(gsub("[0-9]|'|([Aa]pplause)", "", su_speeches))
su_speeches = lapply(su_speeches, function(x) unlist(strsplit(x, "[[:blank:]]|[[:punct:]]")))
su_speeches
su_speeches = lapply(su_speeches, function(x) x[x!=""])
su_speeches
su_tokens = lapply(su_speeches, function(x) x[x!=""])
su_tokens = lapply(su_speeches, function(x) table(x))
su_frequency = lapply(su_tokens, fucntion(x) x/sum(x))
su_frequency = lapply(su_tokens, function(x) x/sum(x))
su_frequency
no_punct = strsplit(su_speeches, "[[:punct:]]|[[:blank:]]")
no_punct = strsplit(su_speeches, "[[:punct:]]|[[:blank:]]")
no_punct
su_frequency
explor = lapply(su_frequency, function(x) sum(x))
explor
explor = lapply(su_tokens, function(x) sum(x))
explor
plot(explor, type='h')
su_tokens
plot(su_tokens, type='h')
explor
su_frequency
su_tokens
su_year = SpeechInfoExtract(speechInfo, 4, c)
plot(explor ,su_year, type='h')
su_year = SpeechInfoExtract(speechInfo, 4, c) + c(2012)
su_year = SpeechInfoExtract(speechInfo, 4, c) + c("2012")
su_year = c(NA)
su_year = c(su_year, SpeechInfoExtract(speechInfo, 4, c) )
length(su_year)
plot(explor ,su_year, type='h')
explor
plot(su_year, explor, type='h')
explor
su_speeches
su_tokens
su_tokens
su_frequency
